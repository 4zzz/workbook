@use "sass:list";

$counter-prefix: fol-wb-counter-;
$counters: a, b, c, d, e;

@function prefix-all($prefix, $items) {
  $prefixed-items: ();
  @each $item in $items {
    $prefixed-items: list.append($prefixed-items, #{$prefix}#{$item});
  }
  @return $prefixed-items;
}

body {
  counter-reset: katexEqnNo mmlEqnNo prefix-all($counter-prefix, $counters);
}

@each $counter in $counters {

  .cnt-#{$counter} {

    &.use,
    &:not(.use,.inc,.reset) {

      &::before {
        content: counter(#{$counter-prefix}#{$counter});
      }
      &.a::before {
        content: counter(#{$counter-prefix}#{$counter}, lower-alpha);
      }
      &.i::before {
        content: counter(#{$counter-prefix}#{$counter}, lower-roman);
      }
      &.A::before {
        content: counter(#{$counter-prefix}#{$counter}, upper-alpha);
      }
      &.I::before {
        content: counter(#{$counter-prefix}#{$counter}, upper-roman);
      }

    }

    &.inc,
    &:not(.use,.inc,.reset) {
      counter-increment: #{$counter-prefix}#{$counter};
    }

    &.reset {
      counter-reset: #{$counter-prefix}#{$counter};
    }

  }

  // counter-set doesn't work in Safari :-(
  // If it worked, we'd also need to add .set-0 and .set[data] to :not()s above.

  // :global(.cnt-#{$counter}.set-0) {
  //   counter-set: #{$counter-prefix}#{$counter} 0;
  // }

  // :global(.cnt-#{$counter}.set[data]) {
  //   counter-set: #{$counter-prefix}#{$counter} attr(data);
  // }
}
