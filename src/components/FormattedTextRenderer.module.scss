@use 'sass:map';
@import '~bootstrap/scss/bootstrap-utilities';

// default in Bootstrap 5.2
$table-striped-columns-order: even;

.formattedText {

  :global(.note) {
    font-size: $font-size-sm;
    background-color: $light;
    padding: map.get($spacers, 3);
    margin-bottom: map.get($spacers, 3);

    > *:last-child,
    > :global(.table):last-child > table:last-child,
    > :global(.math-display):last-child > :global(.katex-display) {
      margin-bottom: 0 !important;
    }
    // Possibly replace with:
    // &::after {
    //   content: '';
    //   height: 0;
    //   width: 100%;
    //   display: block;
    //   margin-top: - map.get($spacers, 3);
    // }
  }

  > *:last-child,
  > :global(.table):last-child > table:last-child,
  > :global(.math-display):last-child > :global(.katex-display) {
    margin-bottom: 0 !important;
  }
  // Possibly replace with:
  // &::after {
  //   content: '';
  //   height: 0;
  //   width: 100%;
  //   display: block;
  //   margin-top: - map.get($spacers, 3);
  // }

  /* Shamelessly copied from Bootstrap */
  :global(.table) {
    > table {
      --#{$variable-prefix}table-bg: #{$table-bg};
      --#{$variable-prefix}table-accent-bg: #{$table-accent-bg};
      --#{$variable-prefix}table-striped-color: #{$table-striped-color};
      --#{$variable-prefix}table-striped-bg: #{$table-striped-bg};
      --#{$variable-prefix}table-active-color: #{$table-active-color};
      --#{$variable-prefix}table-active-bg: #{$table-active-bg};
      --#{$variable-prefix}table-hover-color: #{$table-hover-color};
      --#{$variable-prefix}table-hover-bg: #{$table-hover-bg};
    
      width: 100%;
      margin-bottom: $spacer;
      color: $table-color;
      vertical-align: $table-cell-vertical-align;
      border-color: $table-border-color;

      > :not(caption) > * > * {
        padding: $table-cell-padding-y $table-cell-padding-x;
        background-color: var(--#{$variable-prefix}table-bg);
        border-bottom-width: $table-border-width;
        box-shadow: inset 0 0 0 9999px var(--#{$variable-prefix}table-accent-bg);
      }
    
      > tbody {
        vertical-align: inherit;
      }
    
      > thead {
        vertical-align: bottom;
      }
    
      // Highlight border color between thead, tbody and tfoot.
      > :not(:first-child) {
        border-top: (2 * $table-border-width) solid $table-group-separator-color;
      }
    }
  }

  :global(.table-intended-meaning),
  :global(.table-truth),
  :global(.table-sm) {
    > table {
      > :not(caption) > * > * {
        padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;
      }
    }
  }

  :global(.table-bordered) {
    > table {
      > :not(caption) > * {
        border-width: $table-border-width 0;
    
        // stylelint-disable-next-line selector-max-universal
        > * {
          border-width: 0 $table-border-width;
        }
      }
    }
  }

  :global(.table-borderless) {
    > table {
      // stylelint-disable-next-line selector-max-universal
      > :not(caption) > * > * {
        border-bottom-width: 0;
      }
    
      > :not(:first-child) {
        border-top-width: 0;
      }
    }
  }

  :global(.table-striped) {
    > table {
      > tbody > tr:nth-of-type(#{$table-striped-order}) > * {
        --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-striped-bg);
        color: var(--#{$variable-prefix}table-striped-color);
      }
    }
  }

  :global(.table-truth),
  :global(.table-striped-columns) {
    > table {
      > :not(caption) > tr > :nth-child(#{$table-striped-columns-order}) {
        --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-striped-bg);
        color: var(--#{$variable-prefix}table-striped-color);
      }
    }
  }

  :global(.table-intended-meaning),
  :global(.table-truth),
  :global(.table-w-auto) {
    > table {
      width: auto;
    }
  }

  :global(.table-m-auto) {
    > table {
      margin: auto !important;
    }
  }

  :global(.table-truth) {
    font-size: $font-size-sm;
    overflow-x: auto;

    &:global(.table) > table {
      // overflow-x causes the table's margin not to collapse
      // with the parent's margin
      margin-bottom: 0;
    }

    > table {
      > :not(caption) > * > th {
        white-space: nowrap;
      }
    }
  }

}
