!function(){"use strict";var e={86391:function(e,r,t){var o=t(15861),n=t(64687),s=t.n(n),a=t(37762),u=t(1413),c=t(61465),i=(0,t(40255).ni)({baseUrl:"https://api.github.com/",prepareHeaders:function(e,r){var t=(0,r.getState)().sheetStorage.ghToken;return t&&e.append("Authorization","token ".concat(t)),e},cache:"no-cache"}),p=function(){var e=(0,o.Z)(s().mark((function e(r,t,o){var n;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i(r,t,o);case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(r,t,o){return e.apply(this,arguments)}}(),l=p;function m(e){var r=null;return e&&e.split(", ").forEach((function(e){var t=e.split("; ");if('rel="last"'===t[1]){var o=t[0].match(/.*[?&]+page=([0-9]+)/);o&&void 0!==o[1]&&/^\d+$/.test(o[1])&&(r=parseInt(o[1]))}})),r||1}var d=(0,c.LC)({reducerPath:"githubApi",baseQuery:l,tagTypes:["Files","Refs","Pulls"],endpoints:function(e){return{reposListForUserHeaders:e.query({query:function(e){return{url:"/users/".concat(e.username,"/repos"),method:"HEAD",params:{type:e.type,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page}}},transformResponse:function(e,r){var t;return{link:(null===r||void 0===r||null===(t=r.response)||void 0===t?void 0:t.headers.get("link"))||void 0}}}),reposListForAuthenticatedUserHeaders:e.query({query:function(e){return{method:"HEAD",url:"/user/repos",params:{visibility:e.visibility,affiliation:e.affiliation,type:e.type,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page,since:e.since,before:e.before}}},transformResponse:function(e,r){var t;return{link:(null===r||void 0===r||null===(t=r.response)||void 0===t?void 0:t.headers.get("link"))||void 0}}}),searchReposHeaders:e.query({query:function(e){return{method:"HEAD",url:"/search/repositories",params:{q:e.q,sort:e.sort,order:e.order,per_page:e.perPage,page:e.page}}},transformResponse:function(e,r){var t;return{link:(null===r||void 0===r||null===(t=r.response)||void 0===t?void 0:t.headers.get("link"))||void 0}}}),reposListBranchesHeaders:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches"),params:{protected:e.protected,per_page:e.perPage,page:e.page}}},transformResponse:function(e,r){var t;return{link:(null===r||void 0===r||null===(t=r.response)||void 0===t?void 0:t.headers.get("link"))||void 0}}}),reposListAllBranches:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches"),params:{protected:e.protected,per_page:50}}},onQueryStarted:function(e,r){return(0,o.Z)(s().mark((function t(){var o,n,a,u,c,i,p,l,y,f,h;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=e.owner,n=e.repo,a=r.dispatch,u=r.getState,c=r.queryFulfilled,i=r.updateCachedData,t.next=4,d.endpoints.reposListBranchesHeaders.initiate({owner:o,repo:n,perPage:50})(a,u,null);case 4:if(!(p=t.sent).isSuccess){t.next=19;break}return l=m(p.data.link),t.prev=7,t.next=10,c;case 10:for(y=t.sent,console.log("reposListAllBranches: got result ",y," lastPage is ",l),f=[],h=1;h<l;h++)console.log("loading extra branches on page ",h);i((function(e){return e.concat(f)})),t.next=19;break;case 17:t.prev=17,t.t0=t.catch(7);case 19:case"end":return t.stop()}}),t,null,[[7,17]])})))()}}),reposMergeWithResponseCode:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/merges"),method:"POST",body:e.body}},transformResponse:function(e,r,t){var o;return console.log(r),{status:(null===r||void 0===r||null===(o=r.response)||void 0===o?void 0:o.status)||-1,response:e}}}),reposRenameBranchWithResponseCode:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/merges"),method:"POST",body:e.body}},transformResponse:function(e,r,t){return console.log(r),{status:0,reponse:void 0}}})}}}),y=(d.useReposListForUserHeadersQuery,d.useReposListForAuthenticatedUserHeadersQuery,d.useSearchReposHeadersQuery,d.useReposListBranchesHeadersQuery,d.useReposListAllBranchesQuery,d.injectEndpoints({endpoints:function(e){return{gitignoreGetAllTemplates:e.query({query:function(){return{url:"/gitignore/templates"}}}),gitignoreGetTemplate:e.query({query:function(e){return{url:"/gitignore/templates/".concat(e.name)}}}),gitCreateBlob:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/blobs"),method:"POST",body:e.body}}}),gitGetBlob:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/blobs/").concat(e.fileSha)}}}),gitCreateCommit:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/commits"),method:"POST",body:e.body}}}),gitGetCommit:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/commits/").concat(e.commitSha)}}}),gitListMatchingRefs:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/matching-refs/").concat(e.ref),params:{per_page:e.perPage,page:e.page}}}}),gitGetRef:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/ref/").concat(e.ref)}}}),gitCreateRef:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/refs"),method:"POST",body:e.body}},invalidatesTags:["Refs"]}),gitUpdateRef:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/refs/").concat(e.ref),method:"PATCH",body:e.body}},invalidatesTags:["Refs"]}),gitDeleteRef:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/refs/").concat(e.ref),method:"DELETE"}},invalidatesTags:["Refs"]}),gitCreateTag:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/tags"),method:"POST",body:e.body}}}),gitGetTag:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/tags/").concat(e.tagSha)}}}),gitCreateTree:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/trees"),method:"POST",body:e.body}}}),gitGetTree:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/git/trees/").concat(e.treeSha),params:{recursive:e.recursive}}}})}},overrideExisting:!1})),f=(y.useGitignoreGetAllTemplatesQuery,y.useGitignoreGetTemplateQuery,y.useGitCreateBlobMutation,y.useGitGetBlobQuery,y.useGitCreateCommitMutation,y.useGitGetCommitQuery,y.useGitListMatchingRefsQuery,y.useGitGetRefQuery,y.useGitCreateRefMutation,y.useGitUpdateRefMutation,y.useGitDeleteRefMutation,y.useGitCreateTagMutation,y.useGitGetTagQuery,y.useGitCreateTreeMutation,y.useGitGetTreeQuery,d.injectEndpoints({endpoints:function(e){return{pullsList:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls"),params:{state:e.state,head:e.head,base:e.base,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page}}},providesTags:["Pulls"]}),pullsListWH:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls"),params:{state:e.state,head:e.head,base:e.base,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page}}},transformResponse:function(e,r){var t,o={};return null===r||void 0===r||null===(t=r.response)||void 0===t||t.headers.forEach((function(e,r){return o[r]=e})),{response:e,headers:o}},providesTags:["Pulls"]}),pullsCreate:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls"),method:"POST",body:e.body}},invalidatesTags:["Pulls"]}),pullsListReviewCommentsForRepo:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/comments"),params:{sort:e.sort,direction:e.direction,since:e.since,per_page:e.perPage,page:e.page}}}}),pullsGetReviewComment:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/comments/").concat(e.commentId)}}}),pullsUpdateReviewComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/comments/").concat(e.commentId),method:"PATCH",body:e.body}}}),pullsDeleteReviewComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/comments/").concat(e.commentId),method:"DELETE"}}}),pullsGet:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber)}}}),pullsUpdate:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber),method:"PATCH",body:e.body}}}),pullsListReviewComments:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/comments"),params:{sort:e.sort,direction:e.direction,since:e.since,per_page:e.perPage,page:e.page}}}}),pullsCreateReviewComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/comments"),method:"POST",body:e.body}}}),pullsCreateReplyForReviewComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/comments/").concat(e.commentId,"/replies"),method:"POST",body:e.body}}}),pullsListCommits:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/commits"),params:{per_page:e.perPage,page:e.page}}}}),pullsListFiles:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/files"),params:{per_page:e.perPage,page:e.page}}}}),pullsCheckIfMerged:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/merge")}}}),pullsMerge:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/merge"),method:"PUT",body:e.body}},invalidatesTags:["Files","Pulls"]}),pullsListRequestedReviewers:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/requested_reviewers"),params:{per_page:e.perPage,page:e.page}}}}),pullsRequestReviewers:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/requested_reviewers"),method:"POST",body:e.body}}}),pullsRemoveRequestedReviewers:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/requested_reviewers"),method:"DELETE",body:e.body}}}),pullsListReviews:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews"),params:{per_page:e.perPage,page:e.page}}}}),pullsCreateReview:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews"),method:"POST",body:e.body}}}),pullsGetReview:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId)}}}),pullsUpdateReview:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId),method:"PUT",body:e.body}}}),pullsDeletePendingReview:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId),method:"DELETE"}}}),pullsListCommentsForReview:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId,"/comments"),params:{per_page:e.perPage,page:e.page}}}}),pullsDismissReview:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId,"/dismissals"),method:"PUT",body:e.body}}}),pullsSubmitReview:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/reviews/").concat(e.reviewId,"/events"),method:"POST",body:e.body}}}),pullsUpdateBranch:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pulls/").concat(e.pullNumber,"/update-branch"),method:"PUT",body:e.body}}})}},overrideExisting:!1})),h=(f.usePullsListQuery,f.usePullsCreateMutation,f.usePullsListReviewCommentsForRepoQuery,f.usePullsGetReviewCommentQuery,f.usePullsUpdateReviewCommentMutation,f.usePullsDeleteReviewCommentMutation,f.usePullsGetQuery,f.usePullsUpdateMutation,f.usePullsListReviewCommentsQuery,f.usePullsCreateReviewCommentMutation,f.usePullsCreateReplyForReviewCommentMutation,f.usePullsListCommitsQuery,f.usePullsListFilesQuery,f.usePullsCheckIfMergedQuery,f.usePullsMergeMutation,f.usePullsListRequestedReviewersQuery,f.usePullsRequestReviewersMutation,f.usePullsRemoveRequestedReviewersMutation,f.usePullsListReviewsQuery,f.usePullsCreateReviewMutation,f.usePullsGetReviewQuery,f.usePullsUpdateReviewMutation,f.usePullsDeletePendingReviewMutation,f.usePullsListCommentsForReviewQuery,f.usePullsDismissReviewMutation,f.usePullsSubmitReviewMutation,f.usePullsUpdateBranchMutation,d.injectEndpoints({endpoints:function(e){return{reposListForOrg:e.query({query:function(e){return{url:"/orgs/".concat(e.org,"/repos"),params:{type:e.type,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page}}}}),reposCreateInOrg:e.mutation({query:function(e){return{url:"/orgs/".concat(e.org,"/repos"),method:"POST",body:e.body}}}),reposGet:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo),cache:"reload"}}}),reposUpdate:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo),method:"PATCH",body:e.body}}}),reposDelete:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo),method:"DELETE"}}}),reposListAutolinks:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/autolinks"),params:{page:e.page}}}}),reposCreateAutolink:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/autolinks"),method:"POST",body:e.body}}}),reposGetAutolink:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/autolinks/").concat(e.autolinkId)}}}),reposDeleteAutolink:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/autolinks/").concat(e.autolinkId),method:"DELETE"}}}),reposEnableAutomatedSecurityFixes:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/automated-security-fixes"),method:"PUT"}}}),reposDisableAutomatedSecurityFixes:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/automated-security-fixes"),method:"DELETE"}}}),reposListBranches:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches"),params:{protected:e.protected,per_page:e.perPage,page:e.page}}},providesTags:["Refs"]}),reposGetBranch:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch)}}}),reposGetBranchProtection:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection")}}}),reposUpdateBranchProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection"),method:"PUT",body:e.body}}}),reposDeleteBranchProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection"),method:"DELETE"}}}),reposGetAdminBranchProtection:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/enforce_admins")}}}),reposSetAdminBranchProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/enforce_admins"),method:"POST"}}}),reposDeleteAdminBranchProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/enforce_admins"),method:"DELETE"}}}),reposGetPullRequestReviewProtection:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_pull_request_reviews")}}}),reposUpdatePullRequestReviewProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_pull_request_reviews"),method:"PATCH",body:e.body}}}),reposDeletePullRequestReviewProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_pull_request_reviews"),method:"DELETE"}}}),reposGetCommitSignatureProtection:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_signatures")}}}),reposCreateCommitSignatureProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_signatures"),method:"POST"}}}),reposDeleteCommitSignatureProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_signatures"),method:"DELETE"}}}),reposGetStatusChecksProtection:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks")}}}),reposUpdateStatusCheckProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks"),method:"PATCH",body:e.body}}}),reposRemoveStatusCheckProtection:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks"),method:"DELETE"}}}),reposGetAllStatusCheckContexts:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks/contexts")}}}),reposAddStatusCheckContexts:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks/contexts"),method:"POST",body:e.body}}}),reposSetStatusCheckContexts:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks/contexts"),method:"PUT",body:e.body}}}),reposRemoveStatusCheckContexts:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/required_status_checks/contexts"),method:"DELETE",body:e.body}}}),reposGetAccessRestrictions:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions")}}}),reposDeleteAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions"),method:"DELETE"}}}),reposGetAppsWithAccessToProtectedBranch:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/apps")}}}),reposAddAppAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/apps"),method:"POST",body:e.body}}}),reposSetAppAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/apps"),method:"PUT",body:e.body}}}),reposRemoveAppAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/apps"),method:"DELETE",body:e.body}}}),reposGetTeamsWithAccessToProtectedBranch:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/teams")}}}),reposAddTeamAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/teams"),method:"POST",body:e.body}}}),reposSetTeamAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/teams"),method:"PUT",body:e.body}}}),reposRemoveTeamAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/teams"),method:"DELETE",body:e.body}}}),reposGetUsersWithAccessToProtectedBranch:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/users")}}}),reposAddUserAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/users"),method:"POST",body:e.body}}}),reposSetUserAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/users"),method:"PUT",body:e.body}}}),reposRemoveUserAccessRestrictions:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/protection/restrictions/users"),method:"DELETE",body:e.body}}}),reposRenameBranch:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/branches/").concat(e.branch,"/rename"),method:"POST",body:e.body}}}),reposCodeownersErrors:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/codeowners/errors"),params:{ref:e.ref}}}}),reposListCollaborators:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/collaborators"),params:{affiliation:e.affiliation,per_page:e.perPage,page:e.page}}}}),reposCheckCollaborator:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/collaborators/").concat(e.username)}}}),reposAddCollaborator:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/collaborators/").concat(e.username),method:"PUT",body:e.body}}}),reposRemoveCollaborator:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/collaborators/").concat(e.username),method:"DELETE"}}}),reposGetCollaboratorPermissionLevel:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/collaborators/").concat(e.username,"/permission")}}}),reposListCommitCommentsForRepo:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/comments"),params:{per_page:e.perPage,page:e.page}}}}),reposGetCommitComment:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/comments/").concat(e.commentId)}}}),reposUpdateCommitComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/comments/").concat(e.commentId),method:"PATCH",body:e.body}}}),reposDeleteCommitComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/comments/").concat(e.commentId),method:"DELETE"}}}),reposListCommits:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits"),params:{sha:e.sha,path:e.path,author:e.author,since:e.since,until:e.until,per_page:e.perPage,page:e.page}}}}),reposListBranchesForHeadCommit:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.commitSha,"/branches-where-head")}}}),reposListCommentsForCommit:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.commitSha,"/comments"),params:{per_page:e.perPage,page:e.page}}}}),reposCreateCommitComment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.commitSha,"/comments"),method:"POST",body:e.body}}}),reposListPullRequestsAssociatedWithCommit:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.commitSha,"/pulls"),params:{per_page:e.perPage,page:e.page}}}}),reposGetCommit:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.ref),params:{page:e.page,per_page:e.perPage}}}}),reposGetCombinedStatusForRef:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.ref,"/status"),params:{per_page:e.perPage,page:e.page}}}}),reposListCommitStatusesForRef:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/commits/").concat(e.ref,"/statuses"),params:{per_page:e.perPage,page:e.page}}}}),reposGetCommunityProfileMetrics:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/community/profile")}}}),reposCompareCommits:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/compare/").concat(e.basehead),params:{page:e.page,per_page:e.perPage}}}}),reposGetContent:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/contents/").concat(e.path),params:{ref:e.ref}}},providesTags:["Files"]}),reposCreateOrUpdateFileContents:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/contents/").concat(e.path),method:"PUT",body:e.body}},extraOptions:{maxRetries:0},invalidatesTags:["Files","Refs"]}),reposDeleteFile:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/contents/").concat(e.path),method:"DELETE",body:e.body}}}),reposListContributors:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/contributors"),params:{anon:e.anon,per_page:e.perPage,page:e.page}}}}),reposListDeployments:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments"),params:{sha:e.sha,ref:e.ref,task:e.task,environment:e.environment,per_page:e.perPage,page:e.page}}}}),reposCreateDeployment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments"),method:"POST",body:e.body}}}),reposGetDeployment:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments/").concat(e.deploymentId)}}}),reposDeleteDeployment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments/").concat(e.deploymentId),method:"DELETE"}}}),reposListDeploymentStatuses:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments/").concat(e.deploymentId,"/statuses"),params:{per_page:e.perPage,page:e.page}}}}),reposCreateDeploymentStatus:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments/").concat(e.deploymentId,"/statuses"),method:"POST",body:e.body}}}),reposGetDeploymentStatus:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/deployments/").concat(e.deploymentId,"/statuses/").concat(e.statusId)}}}),reposCreateDispatchEvent:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/dispatches"),method:"POST",body:e.body}}}),reposGetAllEnvironments:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/environments")}}}),reposGetEnvironment:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/environments/").concat(e.environmentName)}}}),reposCreateOrUpdateEnvironment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/environments/").concat(e.environmentName),method:"PUT",body:e.body}}}),reposDeleteAnEnvironment:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/environments/").concat(e.environmentName),method:"DELETE"}}}),reposListForks:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/forks"),params:{sort:e.sort,per_page:e.perPage,page:e.page}}}}),reposCreateFork:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/forks"),method:"POST",body:e.body}}}),reposListWebhooks:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks"),params:{per_page:e.perPage,page:e.page}}}}),reposCreateWebhook:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks"),method:"POST",body:e.body}}}),reposGetWebhook:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId)}}}),reposUpdateWebhook:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId),method:"PATCH",body:e.body}}}),reposDeleteWebhook:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId),method:"DELETE"}}}),reposGetWebhookConfigForRepo:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/config")}}}),reposUpdateWebhookConfigForRepo:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/config"),method:"PATCH",body:e.body}}}),reposListWebhookDeliveries:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/deliveries"),params:{per_page:e.perPage,cursor:e.cursor}}}}),reposGetWebhookDelivery:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/deliveries/").concat(e.deliveryId)}}}),reposRedeliverWebhookDelivery:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/deliveries/").concat(e.deliveryId,"/attempts"),method:"POST"}}}),reposPingWebhook:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/pings"),method:"POST"}}}),reposTestPushWebhook:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/hooks/").concat(e.hookId,"/tests"),method:"POST"}}}),reposListInvitations:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/invitations"),params:{per_page:e.perPage,page:e.page}}}}),reposUpdateInvitation:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/invitations/").concat(e.invitationId),method:"PATCH",body:e.body}}}),reposDeleteInvitation:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/invitations/").concat(e.invitationId),method:"DELETE"}}}),reposListDeployKeys:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/keys"),params:{per_page:e.perPage,page:e.page}}}}),reposCreateDeployKey:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/keys"),method:"POST",body:e.body}}}),reposGetDeployKey:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/keys/").concat(e.keyId)}}}),reposDeleteDeployKey:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/keys/").concat(e.keyId),method:"DELETE"}}}),reposListLanguages:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/languages")}}}),reposEnableLfsForRepo:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/lfs"),method:"PUT"}}}),reposDisableLfsForRepo:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/lfs"),method:"DELETE"}}}),reposMergeUpstream:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/merge-upstream"),method:"POST",body:e.body}}}),reposMerge:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/merges"),method:"POST",body:e.body}}}),reposGetPages:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages")}}}),reposCreatePagesSite:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages"),method:"POST",body:e.body}}}),reposUpdateInformationAboutPagesSite:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages"),method:"PUT",body:e.body}}}),reposDeletePagesSite:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages"),method:"DELETE"}}}),reposListPagesBuilds:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages/builds"),params:{per_page:e.perPage,page:e.page}}}}),reposRequestPagesBuild:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages/builds"),method:"POST"}}}),reposGetLatestPagesBuild:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages/builds/latest")}}}),reposGetPagesBuild:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages/builds/").concat(e.buildId)}}}),reposGetPagesHealthCheck:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/pages/health")}}}),reposGetReadme:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/readme"),params:{ref:e.ref}}}}),reposGetReadmeInDirectory:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/readme/").concat(e.dir),params:{ref:e.ref}}}}),reposListReleases:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases"),params:{per_page:e.perPage,page:e.page}}}}),reposCreateRelease:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases"),method:"POST",body:e.body}}}),reposGetReleaseAsset:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/assets/").concat(e.assetId)}}}),reposUpdateReleaseAsset:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/assets/").concat(e.assetId),method:"PATCH",body:e.body}}}),reposDeleteReleaseAsset:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/assets/").concat(e.assetId),method:"DELETE"}}}),reposGenerateReleaseNotes:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/generate-notes"),method:"POST",body:e.body}}}),reposGetLatestRelease:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/latest")}}}),reposGetReleaseByTag:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/tags/").concat(e.tag)}}}),reposGetRelease:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/").concat(e.releaseId)}}}),reposUpdateRelease:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/").concat(e.releaseId),method:"PATCH",body:e.body}}}),reposDeleteRelease:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/").concat(e.releaseId),method:"DELETE"}}}),reposListReleaseAssets:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/").concat(e.releaseId,"/assets"),params:{per_page:e.perPage,page:e.page}}}}),reposUploadReleaseAsset:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/releases/").concat(e.releaseId,"/assets"),method:"POST",body:e.body,params:{name:e.name,label:e.label}}}}),reposGetCodeFrequencyStats:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/stats/code_frequency")}}}),reposGetCommitActivityStats:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/stats/commit_activity")}}}),reposGetContributorsStats:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/stats/contributors")}}}),reposGetParticipationStats:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/stats/participation")}}}),reposGetPunchCardStats:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/stats/punch_card")}}}),reposCreateCommitStatus:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/statuses/").concat(e.sha),method:"POST",body:e.body}}}),reposListTags:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/tags"),params:{per_page:e.perPage,page:e.page}}}}),reposDownloadTarballArchive:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/tarball/").concat(e.ref)}}}),reposListTeams:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/teams"),params:{per_page:e.perPage,page:e.page}}}}),reposGetAllTopics:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/topics"),params:{page:e.page,per_page:e.perPage}}}}),reposReplaceAllTopics:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/topics"),method:"PUT",body:e.body}}}),reposGetClones:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/traffic/clones"),params:{per:e.per}}}}),reposGetTopPaths:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/traffic/popular/paths")}}}),reposGetTopReferrers:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/traffic/popular/referrers")}}}),reposGetViews:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/traffic/views"),params:{per:e.per}}}}),reposTransfer:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/transfer"),method:"POST",body:e.body}}}),reposCheckVulnerabilityAlerts:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/vulnerability-alerts")}}}),reposEnableVulnerabilityAlerts:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/vulnerability-alerts"),method:"PUT"}}}),reposDisableVulnerabilityAlerts:e.mutation({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/vulnerability-alerts"),method:"DELETE"}}}),reposDownloadZipballArchive:e.query({query:function(e){return{url:"/repos/".concat(e.owner,"/").concat(e.repo,"/zipball/").concat(e.ref)}}}),reposCreateUsingTemplate:e.mutation({query:function(e){return{url:"/repos/".concat(e.templateOwner,"/").concat(e.templateRepo,"/generate"),method:"POST",body:e.body}}}),reposListPublic:e.query({query:function(e){return{url:"/repositories",params:{since:e.since}}}}),reposListForAuthenticatedUser:e.query({query:function(e){return{url:"/user/repos",params:{visibility:e.visibility,affiliation:e.affiliation,type:e.type,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page,since:e.since,before:e.before}}}}),reposCreateForAuthenticatedUser:e.mutation({query:function(e){return{url:"/user/repos",method:"POST",body:e.body}}}),reposListInvitationsForAuthenticatedUser:e.query({query:function(e){return{url:"/user/repository_invitations",params:{per_page:e.perPage,page:e.page}}}}),reposAcceptInvitationForAuthenticatedUser:e.mutation({query:function(e){return{url:"/user/repository_invitations/".concat(e.invitationId),method:"PATCH"}}}),reposDeclineInvitationForAuthenticatedUser:e.mutation({query:function(e){return{url:"/user/repository_invitations/".concat(e.invitationId),method:"DELETE"}}}),reposListForUser:e.query({query:function(e){return{url:"/users/".concat(e.username,"/repos"),params:{type:e.type,sort:e.sort,direction:e.direction,per_page:e.perPage,page:e.page}}}})}},overrideExisting:!1}));h.useReposListForOrgQuery,h.useReposCreateInOrgMutation,h.useReposGetQuery,h.useReposUpdateMutation,h.useReposDeleteMutation,h.useReposListAutolinksQuery,h.useReposCreateAutolinkMutation,h.useReposGetAutolinkQuery,h.useReposDeleteAutolinkMutation,h.useReposEnableAutomatedSecurityFixesMutation,h.useReposDisableAutomatedSecurityFixesMutation,h.useReposListBranchesQuery,h.useReposGetBranchQuery,h.useReposGetBranchProtectionQuery,h.useReposUpdateBranchProtectionMutation,h.useReposDeleteBranchProtectionMutation,h.useReposGetAdminBranchProtectionQuery,h.useReposSetAdminBranchProtectionMutation,h.useReposDeleteAdminBranchProtectionMutation,h.useReposGetPullRequestReviewProtectionQuery,h.useReposUpdatePullRequestReviewProtectionMutation,h.useReposDeletePullRequestReviewProtectionMutation,h.useReposGetCommitSignatureProtectionQuery,h.useReposCreateCommitSignatureProtectionMutation,h.useReposDeleteCommitSignatureProtectionMutation,h.useReposGetStatusChecksProtectionQuery,h.useReposUpdateStatusCheckProtectionMutation,h.useReposRemoveStatusCheckProtectionMutation,h.useReposGetAllStatusCheckContextsQuery,h.useReposAddStatusCheckContextsMutation,h.useReposSetStatusCheckContextsMutation,h.useReposRemoveStatusCheckContextsMutation,h.useReposGetAccessRestrictionsQuery,h.useReposDeleteAccessRestrictionsMutation,h.useReposGetAppsWithAccessToProtectedBranchQuery,h.useReposAddAppAccessRestrictionsMutation,h.useReposSetAppAccessRestrictionsMutation,h.useReposRemoveAppAccessRestrictionsMutation,h.useReposGetTeamsWithAccessToProtectedBranchQuery,h.useReposAddTeamAccessRestrictionsMutation,h.useReposSetTeamAccessRestrictionsMutation,h.useReposRemoveTeamAccessRestrictionsMutation,h.useReposGetUsersWithAccessToProtectedBranchQuery,h.useReposAddUserAccessRestrictionsMutation,h.useReposSetUserAccessRestrictionsMutation,h.useReposRemoveUserAccessRestrictionsMutation,h.useReposRenameBranchMutation,h.useReposCodeownersErrorsQuery,h.useReposListCollaboratorsQuery,h.useReposCheckCollaboratorQuery,h.useReposAddCollaboratorMutation,h.useReposRemoveCollaboratorMutation,h.useReposGetCollaboratorPermissionLevelQuery,h.useReposListCommitCommentsForRepoQuery,h.useReposGetCommitCommentQuery,h.useReposUpdateCommitCommentMutation,h.useReposDeleteCommitCommentMutation,h.useReposListCommitsQuery,h.useReposListBranchesForHeadCommitQuery,h.useReposListCommentsForCommitQuery,h.useReposCreateCommitCommentMutation,h.useReposListPullRequestsAssociatedWithCommitQuery,h.useReposGetCommitQuery,h.useReposGetCombinedStatusForRefQuery,h.useReposListCommitStatusesForRefQuery,h.useReposGetCommunityProfileMetricsQuery,h.useReposCompareCommitsQuery,h.useReposGetContentQuery,h.useReposCreateOrUpdateFileContentsMutation,h.useReposDeleteFileMutation,h.useReposListContributorsQuery,h.useReposListDeploymentsQuery,h.useReposCreateDeploymentMutation,h.useReposGetDeploymentQuery,h.useReposDeleteDeploymentMutation,h.useReposListDeploymentStatusesQuery,h.useReposCreateDeploymentStatusMutation,h.useReposGetDeploymentStatusQuery,h.useReposCreateDispatchEventMutation,h.useReposGetAllEnvironmentsQuery,h.useReposGetEnvironmentQuery,h.useReposCreateOrUpdateEnvironmentMutation,h.useReposDeleteAnEnvironmentMutation,h.useReposListForksQuery,h.useReposCreateForkMutation,h.useReposListWebhooksQuery,h.useReposCreateWebhookMutation,h.useReposGetWebhookQuery,h.useReposUpdateWebhookMutation,h.useReposDeleteWebhookMutation,h.useReposGetWebhookConfigForRepoQuery,h.useReposUpdateWebhookConfigForRepoMutation,h.useReposListWebhookDeliveriesQuery,h.useReposGetWebhookDeliveryQuery,h.useReposRedeliverWebhookDeliveryMutation,h.useReposPingWebhookMutation,h.useReposTestPushWebhookMutation,h.useReposListInvitationsQuery,h.useReposUpdateInvitationMutation,h.useReposDeleteInvitationMutation,h.useReposListDeployKeysQuery,h.useReposCreateDeployKeyMutation,h.useReposGetDeployKeyQuery,h.useReposDeleteDeployKeyMutation,h.useReposListLanguagesQuery,h.useReposEnableLfsForRepoMutation,h.useReposDisableLfsForRepoMutation,h.useReposMergeUpstreamMutation,h.useReposMergeMutation,h.useReposGetPagesQuery,h.useReposCreatePagesSiteMutation,h.useReposUpdateInformationAboutPagesSiteMutation,h.useReposDeletePagesSiteMutation,h.useReposListPagesBuildsQuery,h.useReposRequestPagesBuildMutation,h.useReposGetLatestPagesBuildQuery,h.useReposGetPagesBuildQuery,h.useReposGetPagesHealthCheckQuery,h.useReposGetReadmeQuery,h.useReposGetReadmeInDirectoryQuery,h.useReposListReleasesQuery,h.useReposCreateReleaseMutation,h.useReposGetReleaseAssetQuery,h.useReposUpdateReleaseAssetMutation,h.useReposDeleteReleaseAssetMutation,h.useReposGenerateReleaseNotesMutation,h.useReposGetLatestReleaseQuery,h.useReposGetReleaseByTagQuery,h.useReposGetReleaseQuery,h.useReposUpdateReleaseMutation,h.useReposDeleteReleaseMutation,h.useReposListReleaseAssetsQuery,h.useReposUploadReleaseAssetMutation,h.useReposGetCodeFrequencyStatsQuery,h.useReposGetCommitActivityStatsQuery,h.useReposGetContributorsStatsQuery,h.useReposGetParticipationStatsQuery,h.useReposGetPunchCardStatsQuery,h.useReposCreateCommitStatusMutation,h.useReposListTagsQuery,h.useReposDownloadTarballArchiveQuery,h.useReposListTeamsQuery,h.useReposGetAllTopicsQuery,h.useReposReplaceAllTopicsMutation,h.useReposGetClonesQuery,h.useReposGetTopPathsQuery,h.useReposGetTopReferrersQuery,h.useReposGetViewsQuery,h.useReposTransferMutation,h.useReposCheckVulnerabilityAlertsQuery,h.useReposEnableVulnerabilityAlertsMutation,h.useReposDisableVulnerabilityAlertsMutation,h.useReposDownloadZipballArchiveQuery,h.useReposCreateUsingTemplateMutation,h.useReposListPublicQuery,h.useReposListForAuthenticatedUserQuery,h.useReposCreateForAuthenticatedUserMutation,h.useReposListInvitationsForAuthenticatedUserQuery,h.useReposAcceptInvitationForAuthenticatedUserMutation,h.useReposDeclineInvitationForAuthenticatedUserMutation,h.useReposListForUserQuery;function g(e){return(null!==e&&"object"===typeof e||"function"===typeof e)&&("number"===typeof e.status&&"data"in e||"FETCH_ERROR"===e.status&&"string"===typeof e.error||"PARSING_ERROR"===e.status&&"number"===typeof e.originalStatus&&"string"===typeof e.data&&"string"===typeof e.error||"CUSTOM_ERROR"===e.status&&"string"===typeof e.error)}function b(e){return(null!==e&&"object"===typeof e||"function"===typeof e)&&"string"===typeof e.message&&"string"===typeof e.documentation_url}function R(e){if(g(e)){var r=e,t=r.status;if("FETCH_ERROR"===t)return"Fetch error: ".concat(r.error);if("PARSING_ERROR"===t)return"Parsing error: ".concat(r.error);if("CUSTOM_ERROR"===t)return"Custom error: ".concat(r.error);if(Number.isInteger(t)){if(b(r.data)){var o=r.data;return"".concat(r.status,": ").concat(o.message)}return"".concat(r.status,": Unknown error")}return"".concat(r.status,": Unknown error")}return function(e){return!g(e)}(e)?"Serialized error":"Unknown error"}var q,w=t(34520),v=t.n(w),P=t(58134),C=t(4942),k=t(95273),S=(0,k.createSlice)({name:"githubStorage",initialState:{status:"not_initialized"},reducers:{setToken:function(e,r){e.ghToken=r.payload},processResult:function(e,r){var t=r.payload,o=t.errorMessage,n=t.newEngineState;void 0===o?e.status="task_finished":(e.errorMessage=o,e.status="error"),void 0!==n&&(e.storageEngine.state=n)},updateState:function(e,r){void 0!==e.storageEngine?e.storageEngine.state=r.payload:console.error("SheetStorage: storage engine is not initialized")},init:function(e,r){var t=r.payload,o=t.type,n=t.initialState;e.storageEngine={type:o,state:n}}}}),E=(0,u.Z)({},S.actions),T=(0,k.configureStore)({reducer:(q={},(0,C.Z)(q,d.reducerPath,d.reducer),(0,C.Z)(q,"sheetStorage",S.reducer),q),middleware:function(e){return e().concat(d.middleware)}});function A(e){return e.split("/").map((function(e){return encodeURIComponent(e)})).reduce((function(e,r){return"".concat(e,"/").concat(r)}))}function M(e){var r=e.path,t=e.ref;return"".concat(t,"_session_").concat(function(e){var r,t=null===(r=e.split("/").pop())||void 0===r?void 0:r.split("."),o=t?1===t.length?t[0]:t.slice(0,-1).join("."):"";return o=(o=(o=(o=(o=(o=(o=(o=(o=o.replace("..","")).replace("@{","")).replace("~","")).replace("^","")).replace(":","")).replace("?","")).replace("*","")).replace("[","")).replace(" ","-")}(r),"_").concat(v()(r))}var G,L=function(e){return void 0!==e.sheetStorage.storageEngine&&"github"===e.sheetStorage.storageEngine.type?e.sheetStorage.storageEngine.state:void 0};function x(e){return E.updateState(e)}function D(e,r){return function(){var t=(0,o.Z)(s().mark((function t(o,n){var a,u,c,i,p,l,d;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return u=100,t.next=3,h.endpoints.reposListBranchesHeaders.initiate({owner:e,repo:r,perPage:u},{forceRefetch:!0})(o,n,null);case 3:if(!(c=t.sent).isError){t.next=6;break}throw Error("unexpected response");case 6:i=m(null===(a=c.data)||void 0===a?void 0:a.link),p=[],l=1;case 9:if(!(l<=i)){t.next=21;break}return t.next=12,h.endpoints.reposListBranches.initiate({owner:e,repo:r,perPage:u,page:l},{forceRefetch:!0})(o,n,null);case 12:if(void 0===(d=t.sent).data){t.next=17;break}p=p.concat(d.data),t.next=18;break;case 17:throw Error("unexpected response");case 18:l++,t.next=9;break;case 21:return t.abrupt("return",p);case 22:case"end":return t.stop()}}),t)})));return function(e,r){return t.apply(this,arguments)}}()}function _(e,r,t,n){return function(){var a=(0,o.Z)(s().mark((function o(a,u){var c,i,p,l,d;return s().wrap((function(o){for(;;)switch(o.prev=o.next){case 0:c=100,i=1,p=[],l=1;case 4:if(!(l<=i)){o.next=15;break}return o.next=7,f.endpoints.pullsListWH.initiate({owner:e,repo:r,state:t,perPage:c},{forceRefetch:n})(a,u,null);case 7:if(void 0!==(d=o.sent).data){o.next=10;break}return o.abrupt("return",{error:d.error});case 10:1===l&&(i=m(d.data.headers.link)),p=p.concat(d.data.response);case 12:l++,o.next=4;break;case 15:return o.abrupt("return",{result:p});case 16:case"end":return o.stop()}}),o)})));return function(e,r){return a.apply(this,arguments)}}()}function Q(e){return function(){var r=(0,o.Z)(s().mark((function r(t,o){var n,a;return s().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return e.path=A(e.path),r.next=3,h.endpoints.reposGetContent.initiate(e,{forceRefetch:!0})(t,o,null);case 3:if((n=r.sent).isSuccess){r.next=6;break}return r.abrupt("return",{error:n.error?R(n.error):"GitHub API call error while loading the worksheet"});case 6:if("content"in(a=n.data)){r.next=9;break}return r.abrupt("return",{error:"Worksheet path does not refer to a file."});case 9:return r.prev=9,r.abrupt("return",{content:P.DS.decode(a.content),sha:a.sha});case 13:return r.prev=13,r.t0=r.catch(9),r.abrupt("return",{error:"Base64 content decoding failed"});case 16:case"end":return r.stop()}}),r,null,[[9,13]])})));return function(e,t){return r.apply(this,arguments)}}()}function U(e){return function(){var r=(0,o.Z)(s().mark((function r(t,o){var n,a,c,i,p,l,m,d,y,f,h,g,b,R,q;return s().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=e.owner,a=e.repo,c=e.ref,i=[],r.prev=2,r.next=5,D(n,a)(t,o);case 5:i=r.sent,r.next=12;break;case 8:return r.prev=8,r.t0=r.catch(2),console.log("branch listing error ",i),r.abrupt("return",{error:"API call (listAllRepoBranches) failed, try again."});case 12:if(p=M(e),l=i.filter((function(e){return e.name===c}))[0],m=i.filter((function(e){return e.name===p}))[0],void 0!==l){r.next=17;break}return r.abrupt("return",{error:"The requested work sheet was not found in the repository. Check the file name, path, and branch."});case 17:return console.log("branches: ",i),console.log("expected session branch",p),console.log("session filter: ",i.filter((function(e){return e.name===p}))),console.log("sheetBranch is ",l),console.log("session branch is ",m),d=(0,u.Z)((0,u.Z)({},e),{},{ref:void 0!==m?m.name:l.name}),r.next=25,Q(d)(t,o);case 25:if(!("error"in(y=r.sent))){r.next=29;break}return f=y.error,r.abrupt("return",{error:f||"Failed to load file"});case 29:if(h=y.content,g=y.sha,b={mergeState:"idle",location:e,baseBranch:l.name,baseCommitSha:l.commit.sha,sha:g},void 0===m||(console.log("reusing existing session"),b.sessionBranch={name:m.name,commitSha:m.commit.sha}),t(E.init({type:"github",initialState:b})),void 0===b.sessionBranch){r.next=38;break}return r.next=36,I()(t,o);case 36:R=r.sent,console.log("isSessionBranchMerged: ",R);case 38:return q=v()(JSON.stringify({storageType:"github",location:e})),r.abrupt("return",{json:h,sheetId:q});case 40:case"end":return r.stop()}}),r,null,[[2,8]])})));return function(e,t){return r.apply(this,arguments)}}()}function I(){return function(){var e=(0,o.Z)(s().mark((function e(r,t){var o,n,u,c,i,p,l,m,d,y,f;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=L(t()),console.log("testSessionBranch"),void 0!==o&&void 0!==o.sessionBranch){e.next=4;break}throw Error("isSessionBranchMerged called on uninitialized ghStorage");case 4:return n=o.location,u=n.owner,c=n.repo,i=o.baseBranch,p=o.sessionBranch,e.next=8,_(u,c,"closed",!0)(r,t);case 8:if(void 0===(l=e.sent).error){e.next=11;break}return e.abrupt("return",{error:l.error});case 11:m=l.result,console.log("searching for pull from ".concat(i," to ").concat(p.name," with sha ").concat(p.commitSha)),console.log("pulls: ",m),d=(0,a.Z)(m),e.prev=15,d.s();case 17:if((y=d.n()).done){e.next=23;break}if("closed"!==(f=y.value).state||f.base.ref!==i||f.head.ref!==p.name||f.head.sha!==p.commitSha){e.next=21;break}return e.abrupt("return",{result:!0});case 21:e.next=17;break;case 23:e.next=28;break;case 25:e.prev=25,e.t0=e.catch(15),d.e(e.t0);case 28:return e.prev=28,d.f(),e.finish(28);case 31:return e.abrupt("return",{result:!1});case 32:case"end":return e.stop()}}),e,null,[[15,25,28,31]])})));return function(r,t){return e.apply(this,arguments)}}()}function B(e){return function(){var r=(0,o.Z)(s().mark((function r(t,o){var n,a,u,c,i,p,l,m,d,y,f,q;return s().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return n=o().sheetStorage.storageEngine.state,a=n.location,u=a.owner,c=a.repo,i=a.path,p=n.sessionBranch,l=n.sha,m={owner:u,repo:c,path:A(i),body:{message:e.message,content:P.DS.encode(JSON.stringify(e.contentObj,null,2)),sha:l,branch:p.name}},r.next=6,h.endpoints.reposCreateOrUpdateFileContents.initiate(m)(t,o,null);case 6:if(!("error"in(d=r.sent))){r.next=16;break}if(!g(y=d.error)||"number"!==typeof y.status||!b(y.data)||409!==y.status){r.next=14;break}return f={type:"background_update",message:y.data.message},r.abrupt("return",{saveError:f});case 14:return q={type:"unknown_error",message:R(y)},r.abrupt("return",{saveError:q});case 16:return r.abrupt("return",{response:d});case 17:case"end":return r.stop()}}),r)})));return function(e,t){return r.apply(this,arguments)}}()}function O(e){return function(){var r=(0,o.Z)(s().mark((function r(t,n){var a,c,i,p,l,m,d,f,h,q,w,v,P;return s().wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,new Promise((function(e,r){var t=function(){var t=T.getState().sheetStorage.storageEngine.state.mergeState;return"idle"===t||"success"===t||"merge_waiting"===t?(e(),!0):"error"===t&&(r(),!0)};if(!1===t())var o=T.subscribe((function(){t()&&o()}))}));case 3:r.next=7;break;case 5:r.prev=5,r.t0=r.catch(0);case 7:if(void 0!==(a=function(){return n().sheetStorage.storageEngine.state})().sessionBranch){r.next=19;break}return r.next=11,function(){var e=(0,o.Z)(s().mark((function e(r,t){var o,n,a,u,c,i,p,l,m,d;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=t().sheetStorage.storageEngine.state,n=o.location,a=o.baseCommitSha,u=n.owner,c=n.repo,i="refs/heads/".concat(M(n)),e.next=6,y.endpoints.gitCreateRef.initiate({owner:u,repo:c,body:{ref:i,sha:a}})(r,t,null);case 6:if(!("data"in(p=e.sent))){e.next=11;break}return e.abrupt("return",{response:p.data});case 11:if(!g(l=p.error)||"number"!==typeof l.status||!b(l.data)||422!==l.status||"Reference already exists"!==l.data.message){e.next=17;break}return m={type:"background_update",message:l.data.message},e.abrupt("return",{saveError:m});case 17:return d={type:"unknown_error",message:R(l)},e.abrupt("return",{saveError:d});case 19:case"end":return e.stop()}}),e)})));return function(r,t){return e.apply(this,arguments)}}()(t,n);case 11:if(void 0===(c=r.sent).saveError){r.next=16;break}return i=(0,u.Z)((0,u.Z)({},a()),{},{saveError:c.saveError}),t(E.processResult({errorMessage:"Creation of session branch failed: ".concat(c.saveError.message),newEngineState:i})),r.abrupt("return");case 16:console.log("created session branch ",c.response),p=(0,u.Z)((0,u.Z)({},a()),{},{sessionBranch:{name:M(a().location),commitSha:c.response.object.sha}}),t(E.updateState(p));case 19:return r.next=21,I()(t,n);case 21:if(void 0===(l=r.sent).error){r.next=26;break}return m=(0,u.Z)((0,u.Z)({},a()),{},{saveError:{type:"unknown_error",message:"API call failed: ".concat(R(l.error))}}),t(E.processResult({errorMessage:"API call failed: ".concat(R(l.error)),newEngineState:m})),r.abrupt("return");case 26:if(!0!==l.result){r.next=30;break}return d=(0,u.Z)((0,u.Z)({},a()),{},{saveError:{type:"merged_session",message:"Merged session branch must be deleted"}}),t(E.processResult({errorMessage:"Merged session branch must be deleted",newEngineState:d})),r.abrupt("return");case 30:return console.log("isSessionBranchMerged: ",l),r.next=33,B(e)(t,n);case 33:void 0!==(f=r.sent).saveError?(h=(0,u.Z)((0,u.Z)({},a()),{},{saveError:f.saveError}),t(E.processResult({errorMessage:"Commit failed: ".concat(f.saveError.message),newEngineState:h}))):(q=n().sheetStorage.storageEngine.state,w=f.response.data.content.sha,v=(0,u.Z)((0,u.Z)({},q.sessionBranch),{},{commitSha:f.response.data.commit.sha}),P=(0,u.Z)((0,u.Z)({},q),{},{sha:w,sessionBranch:v}),t(E.processResult({newEngineState:P})));case 35:case"end":return r.stop()}}),r,null,[[0,5]])})));return function(e,t){return r.apply(this,arguments)}}()}function F(e){var r=T.dispatch,t=T.getState;if(!("ghToken"in e))throw new Error("Missing github access token in github engine initialization");return r(E.setToken(e.ghToken)),{loadSheet:function(){var e=(0,o.Z)(s().mark((function e(o){var n;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,U(o)(r,t);case 2:if(void 0===(n=e.sent).error){e.next=5;break}return e.abrupt("return",{errMsg:n.error});case 5:return e.abrupt("return",{json:n.json,sheetId:n.sheetId});case 6:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}(),autoSave:function(){var e=(0,o.Z)(s().mark((function e(o){var n,a,u,c,i,p;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,O(o)(r,t);case 2:if("task_finished"!==(i=t()).sheetStorage.status){e.next=5;break}return e.abrupt("return",!0);case 5:return p={location:null===(n=i.sheetStorage.storageEngine)||void 0===n?void 0:n.state.location,sessionBranch:null===(a=i.sheetStorage.storageEngine)||void 0===a?void 0:a.state.sessionBranch,baseBranch:null===(u=i.sheetStorage.storageEngine)||void 0===u?void 0:u.state.baseBranch,saveError:null===(c=i.sheetStorage.storageEngine)||void 0===c?void 0:c.state.saveError},e.abrupt("return",{errMsg:i.sheetStorage.errorMessage||"err",customErrObj:p});case 7:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}(),resume:function(){var e=(0,o.Z)(s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",!0);case 1:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),manualSave:function(){var e=(0,o.Z)(s().mark((function e(){var n,a,c,i,p,l,m,d;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,function(){var e=(0,o.Z)(s().mark((function e(r,t){var o,n,a,c,i,p,l,m,d,h,q,w,v,P,C,k,S,T,M,G,L,D;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=(o=function(){return t().sheetStorage.storageEngine.state})().location,a=n.owner,c=n.repo,i=n.path,p=i.replace(/^([^/]*\/)*([^/]+)\.workbook$/,"$2"),void 0!==o().sessionBranch){e.next=7;break}return l={type:"no_session_branch",message:"There is no session branch therefore no changes to merge"},r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"error",mergeError:l}))),e.abrupt("return",!1);case 7:return m=o().sessionBranch,d=o().baseBranch,r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"merge_waiting"}))),r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"merging"}))),e.next=13,f.endpoints.pullsList.initiate({owner:a,repo:c,state:"open",perPage:100},{forceRefetch:!0})(r,t,null);case 13:if("data"in(h=e.sent)&&void 0!==h.data){e.next=18;break}return q={type:"api_call_failed",message:void 0!==h.error?R(h.error):"",call:"pullsList"},r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"error",mergeError:q}))),e.abrupt("return",!1);case 18:if(w=h.data,console.log("Pulls list: ",w),v=w.filter((function(e){return e.base.ref===d&&e.head.ref===m.name})),console.log("filtered pr: ",v),!(v.length>1)){e.next=26;break}return P={type:"multiple_pulls",message:"The repository is in an inconsistent state. There are multiple pull requests open from the session branch to the base branch."},r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"error",mergeError:P}))),e.abrupt("return",!1);case 26:if(1!==v.length){e.next=32;break}console.log("PR already created"),C=v[0].number,k=v[0].html_url,e.next=42;break;case 32:return e.next=34,f.endpoints.pullsCreate.initiate({owner:a,repo:c,body:{title:"".concat(p,": Worksheet session"),head:"refs/heads/".concat(m.name),base:"refs/heads/".concat(d)}})(r,t,null);case 34:if("data"in(S=e.sent)){e.next=39;break}return T={type:"api_call_failed",message:R(S.error),call:"pullsCreate"},r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"error",mergeError:T}))),e.abrupt("return",!1);case 39:console.log("created PR: ",S.data),C=S.data.number,k=S.data.html_url;case 42:return e.next=44,f.endpoints.pullsMerge.initiate({owner:a,repo:c,pullNumber:C,body:{commit_title:"".concat(p,": Worksheet session ").concat(a,"/").concat(c,"#").concat(C),commit_message:"See https://github.com/".concat(a,"/").concat(c,"/pull/").concat(C),merge_method:"squash"}})(r,t,null);case 44:if("data"in(M=e.sent)){e.next=50;break}return G=M.error,L=g(G)&&"number"===typeof G.status&&b(G.data)&&405===G.status&&"Pull Request is not mergeable"===G.data.message?{type:"not_mergable",message:R(M.error),url:k}:{type:"api_call_failed",message:R(M.error),call:"pullsMerge"},r(x((0,u.Z)((0,u.Z)({},o()),{},{mergeState:"error",mergeError:L}))),e.abrupt("return",!1);case 50:return console.log("merge success",M.data),e.next=53,y.endpoints.gitDeleteRef.initiate({owner:a,repo:c,ref:"heads/".concat(A(m.name))})(r,t,null);case 53:return"data"in(D=e.sent)||console.log("Failed to delete old branch"),console.log("old branch delete success",D),r(E.updateState((0,u.Z)((0,u.Z)({},o()),{},{sessionBranch:void 0,mergeState:"success",mergeError:void 0,baseCommitSha:M.data.sha}))),e.abrupt("return",M.data);case 58:case"end":return e.stop()}}),e)})));return function(r,t){return e.apply(this,arguments)}}()(r,t);case 2:if(!1!==e.sent){e.next=10;break}return c=null===(n=t().sheetStorage.storageEngine)||void 0===n?void 0:n.state,i=c.baseBranch,p=c.mergeState,l=c.mergeError,m=c.sessionBranch,d={baseBranch:i,mergeState:p,mergeError:l,sessionBranch:m},e.abrupt("return",{errMsg:(null===(a=c.mergeError)||void 0===a?void 0:a.message)||"save error",customErrObj:d});case 10:return e.abrupt("return",!0);case 11:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),customCmd:function(){var e=(0,o.Z)(s().mark((function e(o){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("clearSessionBranch"!==o.type){e.next=4;break}return e.abrupt("return",function(e,r){var t=L(r());void 0!==t&&e(x((0,u.Z)((0,u.Z)({},t),{},{sessionBranch:void 0})))}(r,t));case 4:throw new Error("Unknown custom command");case 5:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}()}}self.onmessage=function(){var e=(0,o.Z)(s().mark((function e(r){var t,o,n,a,u,c,i,p;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=r.data,o=t.cmd,n=t.requestId,console.log("worker got message",r.data),e.t0=o.type,e.next="init"===e.t0?5:"load_sheet"===e.t0?13:"auto_save"===e.t0?19:"manual_save"===e.t0?25:"resume"===e.t0?30:"custom_cmd"===e.t0?35:40;break;case 5:if(console.log("Init cmd payload",o.payload),"github"!==o.payload.engineType){e.next=10;break}G=F(o.payload.initPayload),e.next=11;break;case 10:throw new Error("Unknown storage engine type");case 11:return postMessage({requestId:n,result:!0}),e.abrupt("break",40);case 13:return console.log("Loading sheet...",o.payload),e.next=16,G.loadSheet(o.payload);case 16:return a=e.sent,postMessage({requestId:n,result:a}),e.abrupt("break",40);case 19:return console.log("processing update",o),e.next=22,G.autoSave(o.payload);case 22:return u=e.sent,postMessage({result:u,requestId:n}),e.abrupt("break",40);case 25:return e.next=27,G.manualSave();case 27:return c=e.sent,postMessage({result:c,requestId:n}),e.abrupt("break",40);case 30:return e.next=32,G.resume();case 32:return i=e.sent,postMessage({result:i,requestId:n}),e.abrupt("break",40);case 35:return e.next=37,G.customCmd(o.payload);case 37:return p=e.sent,postMessage({result:p,requestId:n}),e.abrupt("break",40);case 40:case"end":return e.stop()}}),e)})));return function(r){return e.apply(this,arguments)}}()}},r={};function t(o){var n=r[o];if(void 0!==n)return n.exports;var s=r[o]={exports:{}};return e[o](s,s.exports,t),s.exports}t.m=e,t.x=function(){var e=t.O(void 0,[511],(function(){return t(86391)}));return e=t.O(e)},function(){var e=[];t.O=function(r,o,n,s){if(!o){var a=1/0;for(p=0;p<e.length;p++){o=e[p][0],n=e[p][1],s=e[p][2];for(var u=!0,c=0;c<o.length;c++)(!1&s||a>=s)&&Object.keys(t.O).every((function(e){return t.O[e](o[c])}))?o.splice(c--,1):(u=!1,s<a&&(a=s));if(u){e.splice(p--,1);var i=n();void 0!==i&&(r=i)}}return r}s=s||0;for(var p=e.length;p>0&&e[p-1][2]>s;p--)e[p]=e[p-1];e[p]=[o,n,s]}}(),t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,{a:r}),r},t.d=function(e,r){for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},t.f={},t.e=function(e){return Promise.all(Object.keys(t.f).reduce((function(r,o){return t.f[o](e,r),r}),[]))},t.u=function(e){return"static/js/"+e+".7efbe4f3.chunk.js"},t.miniCssF=function(e){},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="/workbook/",function(){var e={391:1};t.f.i=function(r,o){e[r]||importScripts(t.p+t.u(r))};var r=self.webpackChunkworkbook=self.webpackChunkworkbook||[],o=r.push.bind(r);r.push=function(r){var n=r[0],s=r[1],a=r[2];for(var u in s)t.o(s,u)&&(t.m[u]=s[u]);for(a&&a(t);n.length;)e[n.pop()]=1;o(r)}}(),function(){var e=t.x;t.x=function(){return t.e(511).then(e)}}();t.x()}();
//# sourceMappingURL=391.070e3e44.chunk.js.map